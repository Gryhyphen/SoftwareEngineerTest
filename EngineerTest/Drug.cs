// <copyright file="Drug.cs" company="PlaceholderCompany">
// Copyright (c) PlaceholderCompany. All rights reserved.
// </copyright>

namespace EngineerTest;

/// <summary>
/// Represents an instance of a drug.
/// </summary>
public class Drug : IDrug
{
    /// <summary>
    /// Initializes a new instance of the <see cref="Drug"/> class.
    /// Possible candidate for adoption of record type.
    /// </summary>
    /// <param name="name">The name of the drug.</param>
    /// <param name="expiresIn">Number of days till the item expires.</param>
    /// <param name="benefit">An integer which denotes how powerful the drug is.</param>
    public Drug(string name, int expiresIn, int benefit)
    {
        this.Name = name;
        this.ExpiresIn = expiresIn;
        this.Benefit = benefit;
    }

    /// <inheritdoc/>
    public string Name { get; }

    /// <inheritdoc/>
    public int ExpiresIn { get; set; }

    /// <inheritdoc/>
    public int Benefit { get; set; }

    /// <summary>
    /// Overrides equality comparison for drugs with custom value-based comparison.
    /// Checks for reference equality (identity), then checks for value-based equality as defined in <see cref="Equals"/>
    /// Seems to have been generated by Resharper.( https://www.jetbrains.com/help/resharper/Code_Generation__Equality_Members.html ).
    /// </summary>
    /// <param name="obj">The object to compare this instance too.</param>
    /// <returns>True if equals, false otherwise.</returns>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "IDE0041:Null check can be simplified", Justification = "Generated code")]
    [System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.NamingRules", "SA1101:PrefixLocalCallsWithThis", Justification = "Generated code")]
    public override bool Equals(object? obj)
    {
        if (ReferenceEquals(null, obj)) return false;
        if (ReferenceEquals(this, obj)) return true;
        if (obj.GetType() != this.GetType()) return false;
        return Equals((Drug)obj);
    }

    /// <summary>
    /// Gets a hashcode for this instance.
    /// Seems to have been generated by resharper.
    /// </summary>
    /// <returns>Hashcode as a compound key of name, ExpiresIn and Benefit.</returns>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.NamingRules", "SA1101:PrefixLocalCallsWithThis", Justification = "Generated code")]
    public override int GetHashCode()
    {
        return HashCode.Combine(Name, ExpiresIn, Benefit);
    }

    /// <summary>
    /// Custom equality function.
    /// Checks for value equality of name, ExpiresIn and Benefit.
    /// </summary>
    /// <param name="other">The drug to compare this instance to.</param>
    /// <returns>True if equal.</returns>
    protected bool Equals(Drug other)
    {
        return this.Name == other.Name && this.ExpiresIn == other.ExpiresIn && this.Benefit == other.Benefit;
    }
}